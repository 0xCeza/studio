/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from './common';

export type PrizesWinIOStruct = {
  raffleItemPrizeIndex: BigNumberish;
  winningPrizeNumbers: BigNumberish[];
};

export type PrizesWinIOStructOutput = [BigNumber, BigNumber[]] & {
  raffleItemPrizeIndex: BigNumber;
  winningPrizeNumbers: BigNumber[];
};

export type TicketWinIOStruct = {
  entryIndex: BigNumberish;
  prizes: PrizesWinIOStruct[];
};

export type TicketWinIOStructOutput = [BigNumber, PrizesWinIOStructOutput[]] & {
  entryIndex: BigNumber;
  prizes: PrizesWinIOStructOutput[];
};

export type TicketItemIOStruct = {
  ticketAddress: string;
  ticketId: BigNumberish;
  ticketQuantity: BigNumberish;
};

export type TicketItemIOStructOutput = [string, BigNumber, BigNumber] & {
  ticketAddress: string;
  ticketId: BigNumber;
  ticketQuantity: BigNumber;
};

export type MintingSettingsStruct = {
  allowedFrequency: BigNumberish;
  lastExecuted: BigNumberish;
  lastFrens: BigNumberish;
  frensCost: BigNumberish[];
  mintPercentages: BigNumberish[];
  salesPrices: BigNumberish[];
};

export type MintingSettingsStructOutput = [BigNumber, BigNumber, BigNumber, BigNumber[], BigNumber[], BigNumber[]] & {
  allowedFrequency: BigNumber;
  lastExecuted: BigNumber;
  lastFrens: BigNumber;
  frensCost: BigNumber[];
  mintPercentages: BigNumber[];
  salesPrices: BigNumber[];
};

export interface VghstInterface extends utils.Interface {
  functions: {
    'addERC721Listing(address,uint256,uint256)': FunctionFragment;
    'allowance(address,address)': FunctionFragment;
    'approve(address,uint256)': FunctionFragment;
    'balanceOf(address)': FunctionFragment;
    'batchSetERC1155Listing(address,uint256[],uint256[],uint256[])': FunctionFragment;
    'burn(uint256)': FunctionFragment;
    'cancelERC1155Listing(uint256)': FunctionFragment;
    'cancelERC721ListingByToken(address,uint256)': FunctionFragment;
    'claimPrize(uint256,address,(uint256,(uint256,uint256[])[])[])': FunctionFragment;
    'claimTickets(uint256[],uint256[])': FunctionFragment;
    'contractCreator()': FunctionFragment;
    'convertTickets(uint256[],uint256[])': FunctionFragment;
    'convertVGHST(uint256)': FunctionFragment;
    'decimals()': FunctionFragment;
    'decreaseAllowance(address,uint256)': FunctionFragment;
    'diamondAddress()': FunctionFragment;
    'enter(uint256)': FunctionFragment;
    'enterTickets(uint256,(address,uint256,uint256)[])': FunctionFragment;
    'frens()': FunctionFragment;
    'getFee()': FunctionFragment;
    'getMintingSettings()': FunctionFragment;
    'getTotalFees()': FunctionFragment;
    'ghstAddress()': FunctionFragment;
    'gotchiVaultAddress()': FunctionFragment;
    'increaseAllowance(address,uint256)': FunctionFragment;
    'initialize(address,string,string)': FunctionFragment;
    'isApproved(address)': FunctionFragment;
    'leave(uint256)': FunctionFragment;
    'mintAndSell()': FunctionFragment;
    'name()': FunctionFragment;
    'onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)': FunctionFragment;
    'onERC1155Received(address,address,uint256,uint256,bytes)': FunctionFragment;
    'onERC721Received(address,address,uint256,bytes)': FunctionFragment;
    'owner()': FunctionFragment;
    'pause(bool)': FunctionFragment;
    'paused()': FunctionFragment;
    'raffleAddress()': FunctionFragment;
    'realmAddress()': FunctionFragment;
    'setApprovals()': FunctionFragment;
    'setApproved(address,bool)': FunctionFragment;
    'setERC1155Listing(address,uint256,uint256,uint256)': FunctionFragment;
    'setMintingSettings(uint256,uint256[],uint256[],uint256[])': FunctionFragment;
    'setNewDiamondApprovalERC1155(address)': FunctionFragment;
    'stakeAllGHST()': FunctionFragment;
    'stakeIntoPool(address,uint256)': FunctionFragment;
    'stakingAddress()': FunctionFragment;
    'symbol()': FunctionFragment;
    'totalFeesCollected()': FunctionFragment;
    'totalGHST(address)': FunctionFragment;
    'totalSupply()': FunctionFragment;
    'transfer(address,uint256)': FunctionFragment;
    'transferFrom(address,address,uint256)': FunctionFragment;
    'updateCreator(address)': FunctionFragment;
    'updateERC721Listing(address,uint256,address)': FunctionFragment;
    'updateGotchiVault(address)': FunctionFragment;
    'updateOwner(address)': FunctionFragment;
    'updateWithdrawalFee(uint16)': FunctionFragment;
    'withdrawERC1155(address,uint256[],uint256[])': FunctionFragment;
    'withdrawFromPool(address,uint256)': FunctionFragment;
    'withdrawalFeeBP()': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'addERC721Listing'
      | 'allowance'
      | 'approve'
      | 'balanceOf'
      | 'batchSetERC1155Listing'
      | 'burn'
      | 'cancelERC1155Listing'
      | 'cancelERC721ListingByToken'
      | 'claimPrize'
      | 'claimTickets'
      | 'contractCreator'
      | 'convertTickets'
      | 'convertVGHST'
      | 'decimals'
      | 'decreaseAllowance'
      | 'diamondAddress'
      | 'enter'
      | 'enterTickets'
      | 'frens'
      | 'getFee'
      | 'getMintingSettings'
      | 'getTotalFees'
      | 'ghstAddress'
      | 'gotchiVaultAddress'
      | 'increaseAllowance'
      | 'initialize'
      | 'isApproved'
      | 'leave'
      | 'mintAndSell'
      | 'name'
      | 'onERC1155BatchReceived'
      | 'onERC1155Received'
      | 'onERC721Received'
      | 'owner'
      | 'pause'
      | 'paused'
      | 'raffleAddress'
      | 'realmAddress'
      | 'setApprovals'
      | 'setApproved'
      | 'setERC1155Listing'
      | 'setMintingSettings'
      | 'setNewDiamondApprovalERC1155'
      | 'stakeAllGHST'
      | 'stakeIntoPool'
      | 'stakingAddress'
      | 'symbol'
      | 'totalFeesCollected'
      | 'totalGHST'
      | 'totalSupply'
      | 'transfer'
      | 'transferFrom'
      | 'updateCreator'
      | 'updateERC721Listing'
      | 'updateGotchiVault'
      | 'updateOwner'
      | 'updateWithdrawalFee'
      | 'withdrawERC1155'
      | 'withdrawFromPool'
      | 'withdrawalFeeBP',
  ): FunctionFragment;

  encodeFunctionData(functionFragment: 'addERC721Listing', values: [string, BigNumberish, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'allowance', values: [string, string]): string;
  encodeFunctionData(functionFragment: 'approve', values: [string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'balanceOf', values: [string]): string;
  encodeFunctionData(
    functionFragment: 'batchSetERC1155Listing',
    values: [string, BigNumberish[], BigNumberish[], BigNumberish[]],
  ): string;
  encodeFunctionData(functionFragment: 'burn', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'cancelERC1155Listing', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'cancelERC721ListingByToken', values: [string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'claimPrize', values: [BigNumberish, string, TicketWinIOStruct[]]): string;
  encodeFunctionData(functionFragment: 'claimTickets', values: [BigNumberish[], BigNumberish[]]): string;
  encodeFunctionData(functionFragment: 'contractCreator', values?: undefined): string;
  encodeFunctionData(functionFragment: 'convertTickets', values: [BigNumberish[], BigNumberish[]]): string;
  encodeFunctionData(functionFragment: 'convertVGHST', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'decimals', values?: undefined): string;
  encodeFunctionData(functionFragment: 'decreaseAllowance', values: [string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'diamondAddress', values?: undefined): string;
  encodeFunctionData(functionFragment: 'enter', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'enterTickets', values: [BigNumberish, TicketItemIOStruct[]]): string;
  encodeFunctionData(functionFragment: 'frens', values?: undefined): string;
  encodeFunctionData(functionFragment: 'getFee', values?: undefined): string;
  encodeFunctionData(functionFragment: 'getMintingSettings', values?: undefined): string;
  encodeFunctionData(functionFragment: 'getTotalFees', values?: undefined): string;
  encodeFunctionData(functionFragment: 'ghstAddress', values?: undefined): string;
  encodeFunctionData(functionFragment: 'gotchiVaultAddress', values?: undefined): string;
  encodeFunctionData(functionFragment: 'increaseAllowance', values: [string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'initialize', values: [string, string, string]): string;
  encodeFunctionData(functionFragment: 'isApproved', values: [string]): string;
  encodeFunctionData(functionFragment: 'leave', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'mintAndSell', values?: undefined): string;
  encodeFunctionData(functionFragment: 'name', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'onERC1155BatchReceived',
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike],
  ): string;
  encodeFunctionData(
    functionFragment: 'onERC1155Received',
    values: [string, string, BigNumberish, BigNumberish, BytesLike],
  ): string;
  encodeFunctionData(functionFragment: 'onERC721Received', values: [string, string, BigNumberish, BytesLike]): string;
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string;
  encodeFunctionData(functionFragment: 'pause', values: [boolean]): string;
  encodeFunctionData(functionFragment: 'paused', values?: undefined): string;
  encodeFunctionData(functionFragment: 'raffleAddress', values?: undefined): string;
  encodeFunctionData(functionFragment: 'realmAddress', values?: undefined): string;
  encodeFunctionData(functionFragment: 'setApprovals', values?: undefined): string;
  encodeFunctionData(functionFragment: 'setApproved', values: [string, boolean]): string;
  encodeFunctionData(
    functionFragment: 'setERC1155Listing',
    values: [string, BigNumberish, BigNumberish, BigNumberish],
  ): string;
  encodeFunctionData(
    functionFragment: 'setMintingSettings',
    values: [BigNumberish, BigNumberish[], BigNumberish[], BigNumberish[]],
  ): string;
  encodeFunctionData(functionFragment: 'setNewDiamondApprovalERC1155', values: [string]): string;
  encodeFunctionData(functionFragment: 'stakeAllGHST', values?: undefined): string;
  encodeFunctionData(functionFragment: 'stakeIntoPool', values: [string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'stakingAddress', values?: undefined): string;
  encodeFunctionData(functionFragment: 'symbol', values?: undefined): string;
  encodeFunctionData(functionFragment: 'totalFeesCollected', values?: undefined): string;
  encodeFunctionData(functionFragment: 'totalGHST', values: [string]): string;
  encodeFunctionData(functionFragment: 'totalSupply', values?: undefined): string;
  encodeFunctionData(functionFragment: 'transfer', values: [string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'transferFrom', values: [string, string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'updateCreator', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateERC721Listing', values: [string, BigNumberish, string]): string;
  encodeFunctionData(functionFragment: 'updateGotchiVault', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateOwner', values: [string]): string;
  encodeFunctionData(functionFragment: 'updateWithdrawalFee', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'withdrawERC1155', values: [string, BigNumberish[], BigNumberish[]]): string;
  encodeFunctionData(functionFragment: 'withdrawFromPool', values: [string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'withdrawalFeeBP', values?: undefined): string;

  decodeFunctionResult(functionFragment: 'addERC721Listing', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'allowance', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'approve', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'balanceOf', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'batchSetERC1155Listing', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'burn', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'cancelERC1155Listing', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'cancelERC721ListingByToken', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'claimPrize', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'claimTickets', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'contractCreator', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'convertTickets', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'convertVGHST', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'decimals', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'decreaseAllowance', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'diamondAddress', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'enter', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'enterTickets', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'frens', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getFee', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getMintingSettings', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getTotalFees', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'ghstAddress', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'gotchiVaultAddress', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'increaseAllowance', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'isApproved', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'leave', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'mintAndSell', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'name', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'onERC1155BatchReceived', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'onERC1155Received', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'onERC721Received', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'pause', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'paused', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'raffleAddress', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'realmAddress', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setApprovals', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setApproved', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setERC1155Listing', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setMintingSettings', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setNewDiamondApprovalERC1155', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'stakeAllGHST', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'stakeIntoPool', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'stakingAddress', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'symbol', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'totalFeesCollected', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'totalGHST', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'totalSupply', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'transfer', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'transferFrom', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateCreator', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateERC721Listing', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateGotchiVault', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateOwner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'updateWithdrawalFee', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'withdrawERC1155', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'withdrawFromPool', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'withdrawalFeeBP', data: BytesLike): Result;

  events: {
    'Approval(address,address,uint256)': EventFragment;
    'Paused(address)': EventFragment;
    'Transfer(address,address,uint256)': EventFragment;
    'Unpaused(address)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'Approval'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Paused'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Transfer'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Unpaused'): EventFragment;
}

export interface ApprovalEventObject {
  owner: string;
  spender: string;
  value: BigNumber;
}
export type ApprovalEvent = TypedEvent<[string, string, BigNumber], ApprovalEventObject>;

export type ApprovalEventFilter = TypedEventFilter<ApprovalEvent>;

export interface PausedEventObject {
  account: string;
}
export type PausedEvent = TypedEvent<[string], PausedEventObject>;

export type PausedEventFilter = TypedEventFilter<PausedEvent>;

export interface TransferEventObject {
  from: string;
  to: string;
  value: BigNumber;
}
export type TransferEvent = TypedEvent<[string, string, BigNumber], TransferEventObject>;

export type TransferEventFilter = TypedEventFilter<TransferEvent>;

export interface UnpausedEventObject {
  account: string;
}
export type UnpausedEvent = TypedEvent<[string], UnpausedEventObject>;

export type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>;

export interface Vghst extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: VghstInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    allowance(owner: string, spender: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    batchSetERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeIds: BigNumberish[],
      _quantities: BigNumberish[],
      _pricesInWei: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    burn(
      _share: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    cancelERC1155Listing(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    claimPrize(
      _raffleId: BigNumberish,
      _entrant: string,
      _wins: TicketWinIOStruct[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    claimTickets(
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    contractCreator(overrides?: CallOverrides): Promise<[string]>;

    convertTickets(
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    convertVGHST(_share: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber] & { _ghst: BigNumber }>;

    decimals(overrides?: CallOverrides): Promise<[number]>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    diamondAddress(overrides?: CallOverrides): Promise<[string]>;

    enter(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    enterTickets(
      _raffleId: BigNumberish,
      _ticketItems: TicketItemIOStruct[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    frens(overrides?: CallOverrides): Promise<[BigNumber] & { frens_: BigNumber }>;

    getFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    getMintingSettings(overrides?: CallOverrides): Promise<[MintingSettingsStructOutput]>;

    getTotalFees(overrides?: CallOverrides): Promise<[BigNumber]>;

    ghstAddress(overrides?: CallOverrides): Promise<[string]>;

    gotchiVaultAddress(overrides?: CallOverrides): Promise<[string]>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    initialize(
      _owner: string,
      name: string,
      symbol: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    isApproved(_user: string, overrides?: CallOverrides): Promise<[boolean]>;

    leave(
      _share: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    mintAndSell(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    name(overrides?: CallOverrides): Promise<[string]>;

    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides,
    ): Promise<[string]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    pause(
      _setPause: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    paused(overrides?: CallOverrides): Promise<[boolean]>;

    raffleAddress(overrides?: CallOverrides): Promise<[string]>;

    realmAddress(overrides?: CallOverrides): Promise<[string]>;

    setApprovals(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    setApproved(
      _user: string,
      _approval: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    setERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    setMintingSettings(
      _frequency: BigNumberish,
      _percentages: BigNumberish[],
      _prices: BigNumberish[],
      _costs: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    setNewDiamondApprovalERC1155(
      _tokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    stakeAllGHST(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

    stakeIntoPool(
      _poolContractAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    stakingAddress(overrides?: CallOverrides): Promise<[string]>;

    symbol(overrides?: CallOverrides): Promise<[string]>;

    totalFeesCollected(overrides?: CallOverrides): Promise<[BigNumber]>;

    totalGHST(_user: string, overrides?: CallOverrides): Promise<[BigNumber] & { _totalGHST: BigNumber }>;

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    updateCreator(
      _creator: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    updateERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    updateGotchiVault(
      _vault: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    updateOwner(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    updateWithdrawalFee(
      _withdrawalFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    withdrawERC1155(
      _erc1155Address: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    withdrawFromPool(
      _poolContractAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<ContractTransaction>;

    withdrawalFeeBP(overrides?: CallOverrides): Promise<[number]>;
  };

  addERC721Listing(
    _erc721TokenAddress: string,
    _erc721TokenId: BigNumberish,
    _priceInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  allowance(owner: string, spender: string, overrides?: CallOverrides): Promise<BigNumber>;

  approve(
    spender: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

  batchSetERC1155Listing(
    _erc1155TokenAddress: string,
    _erc1155TypeIds: BigNumberish[],
    _quantities: BigNumberish[],
    _pricesInWei: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  burn(_share: BigNumberish, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  cancelERC1155Listing(
    _listingId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  cancelERC721ListingByToken(
    _erc721TokenAddress: string,
    _erc721TokenId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  claimPrize(
    _raffleId: BigNumberish,
    _entrant: string,
    _wins: TicketWinIOStruct[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  claimTickets(
    _ids: BigNumberish[],
    _values: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  contractCreator(overrides?: CallOverrides): Promise<string>;

  convertTickets(
    _ids: BigNumberish[],
    _values: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  convertVGHST(_share: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  decimals(overrides?: CallOverrides): Promise<number>;

  decreaseAllowance(
    spender: string,
    subtractedValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  diamondAddress(overrides?: CallOverrides): Promise<string>;

  enter(
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  enterTickets(
    _raffleId: BigNumberish,
    _ticketItems: TicketItemIOStruct[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  frens(overrides?: CallOverrides): Promise<BigNumber>;

  getFee(overrides?: CallOverrides): Promise<BigNumber>;

  getMintingSettings(overrides?: CallOverrides): Promise<MintingSettingsStructOutput>;

  getTotalFees(overrides?: CallOverrides): Promise<BigNumber>;

  ghstAddress(overrides?: CallOverrides): Promise<string>;

  gotchiVaultAddress(overrides?: CallOverrides): Promise<string>;

  increaseAllowance(
    spender: string,
    addedValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  initialize(
    _owner: string,
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  isApproved(_user: string, overrides?: CallOverrides): Promise<boolean>;

  leave(
    _share: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  mintAndSell(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  name(overrides?: CallOverrides): Promise<string>;

  onERC1155BatchReceived(
    _operator: string,
    _from: string,
    _ids: BigNumberish[],
    _values: BigNumberish[],
    _data: BytesLike,
    overrides?: CallOverrides,
  ): Promise<string>;

  onERC1155Received(
    _operator: string,
    _from: string,
    _id: BigNumberish,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: CallOverrides,
  ): Promise<string>;

  onERC721Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: CallOverrides,
  ): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  pause(_setPause: boolean, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  paused(overrides?: CallOverrides): Promise<boolean>;

  raffleAddress(overrides?: CallOverrides): Promise<string>;

  realmAddress(overrides?: CallOverrides): Promise<string>;

  setApprovals(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  setApproved(
    _user: string,
    _approval: boolean,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  setERC1155Listing(
    _erc1155TokenAddress: string,
    _erc1155TypeId: BigNumberish,
    _quantity: BigNumberish,
    _priceInWei: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  setMintingSettings(
    _frequency: BigNumberish,
    _percentages: BigNumberish[],
    _prices: BigNumberish[],
    _costs: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  setNewDiamondApprovalERC1155(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  stakeAllGHST(overrides?: Overrides & { from?: string | Promise<string> }): Promise<ContractTransaction>;

  stakeIntoPool(
    _poolContractAddress: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  stakingAddress(overrides?: CallOverrides): Promise<string>;

  symbol(overrides?: CallOverrides): Promise<string>;

  totalFeesCollected(overrides?: CallOverrides): Promise<BigNumber>;

  totalGHST(_user: string, overrides?: CallOverrides): Promise<BigNumber>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  transfer(
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  transferFrom(
    sender: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  updateCreator(
    _creator: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  updateERC721Listing(
    _erc721TokenAddress: string,
    _erc721TokenId: BigNumberish,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  updateGotchiVault(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  updateOwner(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  updateWithdrawalFee(
    _withdrawalFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  withdrawERC1155(
    _erc1155Address: string,
    _ids: BigNumberish[],
    _values: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  withdrawFromPool(
    _poolContractAddress: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ContractTransaction>;

  withdrawalFeeBP(overrides?: CallOverrides): Promise<number>;

  callStatic: {
    addERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    allowance(owner: string, spender: string, overrides?: CallOverrides): Promise<BigNumber>;

    approve(spender: string, amount: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    batchSetERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeIds: BigNumberish[],
      _quantities: BigNumberish[],
      _pricesInWei: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    burn(_share: BigNumberish, overrides?: CallOverrides): Promise<void>;

    cancelERC1155Listing(_listingId: BigNumberish, overrides?: CallOverrides): Promise<void>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    claimPrize(
      _raffleId: BigNumberish,
      _entrant: string,
      _wins: TicketWinIOStruct[],
      overrides?: CallOverrides,
    ): Promise<void>;

    claimTickets(_ids: BigNumberish[], _values: BigNumberish[], overrides?: CallOverrides): Promise<void>;

    contractCreator(overrides?: CallOverrides): Promise<string>;

    convertTickets(_ids: BigNumberish[], _values: BigNumberish[], overrides?: CallOverrides): Promise<void>;

    convertVGHST(_share: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<number>;

    decreaseAllowance(spender: string, subtractedValue: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    diamondAddress(overrides?: CallOverrides): Promise<string>;

    enter(_amount: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    enterTickets(_raffleId: BigNumberish, _ticketItems: TicketItemIOStruct[], overrides?: CallOverrides): Promise<void>;

    frens(overrides?: CallOverrides): Promise<BigNumber>;

    getFee(overrides?: CallOverrides): Promise<BigNumber>;

    getMintingSettings(overrides?: CallOverrides): Promise<MintingSettingsStructOutput>;

    getTotalFees(overrides?: CallOverrides): Promise<BigNumber>;

    ghstAddress(overrides?: CallOverrides): Promise<string>;

    gotchiVaultAddress(overrides?: CallOverrides): Promise<string>;

    increaseAllowance(spender: string, addedValue: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    initialize(_owner: string, name: string, symbol: string, overrides?: CallOverrides): Promise<void>;

    isApproved(_user: string, overrides?: CallOverrides): Promise<boolean>;

    leave(_share: BigNumberish, overrides?: CallOverrides): Promise<void>;

    mintAndSell(overrides?: CallOverrides): Promise<void>;

    name(overrides?: CallOverrides): Promise<string>;

    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides,
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    pause(_setPause: boolean, overrides?: CallOverrides): Promise<void>;

    paused(overrides?: CallOverrides): Promise<boolean>;

    raffleAddress(overrides?: CallOverrides): Promise<string>;

    realmAddress(overrides?: CallOverrides): Promise<string>;

    setApprovals(overrides?: CallOverrides): Promise<void>;

    setApproved(_user: string, _approval: boolean, overrides?: CallOverrides): Promise<void>;

    setERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<void>;

    setMintingSettings(
      _frequency: BigNumberish,
      _percentages: BigNumberish[],
      _prices: BigNumberish[],
      _costs: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    setNewDiamondApprovalERC1155(_tokenAddress: string, overrides?: CallOverrides): Promise<void>;

    stakeAllGHST(overrides?: CallOverrides): Promise<void>;

    stakeIntoPool(_poolContractAddress: string, _amount: BigNumberish, overrides?: CallOverrides): Promise<void>;

    stakingAddress(overrides?: CallOverrides): Promise<string>;

    symbol(overrides?: CallOverrides): Promise<string>;

    totalFeesCollected(overrides?: CallOverrides): Promise<BigNumber>;

    totalGHST(_user: string, overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(recipient: string, amount: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    transferFrom(sender: string, recipient: string, amount: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    updateCreator(_creator: string, overrides?: CallOverrides): Promise<void>;

    updateERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _owner: string,
      overrides?: CallOverrides,
    ): Promise<void>;

    updateGotchiVault(_vault: string, overrides?: CallOverrides): Promise<void>;

    updateOwner(_owner: string, overrides?: CallOverrides): Promise<void>;

    updateWithdrawalFee(_withdrawalFee: BigNumberish, overrides?: CallOverrides): Promise<void>;

    withdrawERC1155(
      _erc1155Address: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: CallOverrides,
    ): Promise<void>;

    withdrawFromPool(_poolContractAddress: string, _amount: BigNumberish, overrides?: CallOverrides): Promise<void>;

    withdrawalFeeBP(overrides?: CallOverrides): Promise<number>;
  };

  filters: {
    'Approval(address,address,uint256)'(
      owner?: string | null,
      spender?: string | null,
      value?: null,
    ): ApprovalEventFilter;
    Approval(owner?: string | null, spender?: string | null, value?: null): ApprovalEventFilter;

    'Paused(address)'(account?: null): PausedEventFilter;
    Paused(account?: null): PausedEventFilter;

    'Transfer(address,address,uint256)'(from?: string | null, to?: string | null, value?: null): TransferEventFilter;
    Transfer(from?: string | null, to?: string | null, value?: null): TransferEventFilter;

    'Unpaused(address)'(account?: null): UnpausedEventFilter;
    Unpaused(account?: null): UnpausedEventFilter;
  };

  estimateGas: {
    addERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    allowance(owner: string, spender: string, overrides?: CallOverrides): Promise<BigNumber>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    batchSetERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeIds: BigNumberish[],
      _quantities: BigNumberish[],
      _pricesInWei: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    burn(_share: BigNumberish, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    cancelERC1155Listing(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    claimPrize(
      _raffleId: BigNumberish,
      _entrant: string,
      _wins: TicketWinIOStruct[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    claimTickets(
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    contractCreator(overrides?: CallOverrides): Promise<BigNumber>;

    convertTickets(
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    convertVGHST(_share: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<BigNumber>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    diamondAddress(overrides?: CallOverrides): Promise<BigNumber>;

    enter(_amount: BigNumberish, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    enterTickets(
      _raffleId: BigNumberish,
      _ticketItems: TicketItemIOStruct[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    frens(overrides?: CallOverrides): Promise<BigNumber>;

    getFee(overrides?: CallOverrides): Promise<BigNumber>;

    getMintingSettings(overrides?: CallOverrides): Promise<BigNumber>;

    getTotalFees(overrides?: CallOverrides): Promise<BigNumber>;

    ghstAddress(overrides?: CallOverrides): Promise<BigNumber>;

    gotchiVaultAddress(overrides?: CallOverrides): Promise<BigNumber>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    initialize(
      _owner: string,
      name: string,
      symbol: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    isApproved(_user: string, overrides?: CallOverrides): Promise<BigNumber>;

    leave(_share: BigNumberish, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    mintAndSell(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    pause(_setPause: boolean, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    paused(overrides?: CallOverrides): Promise<BigNumber>;

    raffleAddress(overrides?: CallOverrides): Promise<BigNumber>;

    realmAddress(overrides?: CallOverrides): Promise<BigNumber>;

    setApprovals(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    setApproved(
      _user: string,
      _approval: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    setERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    setMintingSettings(
      _frequency: BigNumberish,
      _percentages: BigNumberish[],
      _prices: BigNumberish[],
      _costs: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    setNewDiamondApprovalERC1155(
      _tokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    stakeAllGHST(overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    stakeIntoPool(
      _poolContractAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    stakingAddress(overrides?: CallOverrides): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    totalFeesCollected(overrides?: CallOverrides): Promise<BigNumber>;

    totalGHST(_user: string, overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    updateCreator(_creator: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updateERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    updateGotchiVault(_vault: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updateOwner(_owner: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<BigNumber>;

    updateWithdrawalFee(
      _withdrawalFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    withdrawERC1155(
      _erc1155Address: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    withdrawFromPool(
      _poolContractAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<BigNumber>;

    withdrawalFeeBP(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    addERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    allowance(owner: string, spender: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    balanceOf(account: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    batchSetERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeIds: BigNumberish[],
      _quantities: BigNumberish[],
      _pricesInWei: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    burn(
      _share: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    cancelERC1155Listing(
      _listingId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    claimPrize(
      _raffleId: BigNumberish,
      _entrant: string,
      _wins: TicketWinIOStruct[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    claimTickets(
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    contractCreator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    convertTickets(
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    convertVGHST(_share: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    diamondAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    enter(
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    enterTickets(
      _raffleId: BigNumberish,
      _ticketItems: TicketItemIOStruct[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    frens(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getMintingSettings(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getTotalFees(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ghstAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    gotchiVaultAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    initialize(
      _owner: string,
      name: string,
      symbol: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    isApproved(_user: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    leave(
      _share: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    mintAndSell(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    onERC1155BatchReceived(
      _operator: string,
      _from: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pause(
      _setPause: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    raffleAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    realmAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setApprovals(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    setApproved(
      _user: string,
      _approval: boolean,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    setERC1155Listing(
      _erc1155TokenAddress: string,
      _erc1155TypeId: BigNumberish,
      _quantity: BigNumberish,
      _priceInWei: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    setMintingSettings(
      _frequency: BigNumberish,
      _percentages: BigNumberish[],
      _prices: BigNumberish[],
      _costs: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    setNewDiamondApprovalERC1155(
      _tokenAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    stakeAllGHST(overrides?: Overrides & { from?: string | Promise<string> }): Promise<PopulatedTransaction>;

    stakeIntoPool(
      _poolContractAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    stakingAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalFeesCollected(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalGHST(_user: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    updateCreator(
      _creator: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    updateERC721Listing(
      _erc721TokenAddress: string,
      _erc721TokenId: BigNumberish,
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    updateGotchiVault(
      _vault: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    updateOwner(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    updateWithdrawalFee(
      _withdrawalFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    withdrawERC1155(
      _erc1155Address: string,
      _ids: BigNumberish[],
      _values: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    withdrawFromPool(
      _poolContractAddress: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> },
    ): Promise<PopulatedTransaction>;

    withdrawalFeeBP(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
